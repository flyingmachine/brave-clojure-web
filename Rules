#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require "susy"
require "nokogiri"
require "compass-core"
require "breakpoint"
require "./lib/rule_helper"

#static
compile '/static/*/' do
end

route '/static/*/' do
  item.identifier.to_s.gsub(/^\/static(\/.*)\/$/, "\\1")
end

sass_options = {
  syntax: :scss,
  load_paths: Compass.configuration.to_sass_engine_options[:load_paths],
}

# sass
compile '/assets/stylesheets/*' do
  unless sass_partial?(item)
    filter(:sass, sass_options)
  end
end

route '/assets/stylesheets/*' do
  unless sass_partial?(item)
    "/assets/stylesheets/#{basename(item.attributes[:filename])}.css" 
  end
end

# js
route '/assets/scripts/*' do
  unless item.identifier.include?("#") # emacs tmp file
    "/assets/scripts/#{basename(item.attributes[:filename])}.js"
  end
end


compile '*' do
  if item.binary?
  elsif item.attributes[:filename] =~ /(index|new|clojure-for-the-brave-and-true|training|clojure-atom|deploy).html/
    filter :erb
  elsif item.attributes[:filename] =~ /md$/
    filter :redcarpet, {
      options: {
        fenced_code_blocks: true,
        tables: true
      },
      renderer: RedcarpetSyntaxHighlighter
    }
    layout 'default'
  elsif item.attributes[:filename] =~ /html$/
    layout 'default'
    filter :toc
  elsif item.attributes[:filename] =~ /(asc|adoc)$/
    filter :asciidoctor, notitle: false
    if item.attributes[:filename] =~ /quests\/deploy/
      layout 'deploy'
    elsif item.attributes[:filename] =~ /quests\/reducers/
      layout 'reducers'
    elsif item.attributes[:filename] =~ /quests\/babooka/
      layout 'babooka'
    else
      layout 'default'
    end
    filter :toc
  end
end

route '*' do
  if item[:extension] == 'css'
    # Write item with identifier /foo/ to /foo.css
    item.identifier.chop.to_s + '.css'
  elsif item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop.to_s + '.' + item[:extension].to_s
  elsif item.identifier =~ /cftbat/
    item.identifier.gsub(/\/cftbat/, "") + 'index.html'
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
